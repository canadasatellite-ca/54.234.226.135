# Feed
location ~* \.(?:rss|atom)$ {
    expires     6h;
    add_header  Pragma public;
    add_header  Cache-Control "public";
}

# stop hotlink loop
#   location = /golbis.jpg { }

## All static files will be served directly.
location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|svgz|gz|ogv|webm|pdf|zip|rar)$
    {
    access_log                  off;
    log_not_found               off;
    expires                     12M;
    directio                    5m; # files more than 10mb will read directly from drive avoid OS cache
    tcp_nodelay                 off; # No need to bleed constant updates. Send the all shebang in one fell swoop.
    limit_rate                  512K; # Limit download speed to 256Kb/s
    limit_rate_after            20m; # Limit after 1m was downloaded.
    ## Set the OS file cache.
    open_file_cache             max=1000 inactive=900s; # 1 mb from directio * 150 = 150 MB RAM
    open_file_cache_valid       90s;
    open_file_cache_min_uses    1;
    open_file_cache_errors      on; # specifies whether or not to cache errors when searching for a file (example 404 file not found errors).
    add_header                  Pragma public;
    add_header                  Cache-Control "public, max-age=31536000,no-transform";

# prevent hotlink
#   valid_referers none blocked ~.google. ~.bing. ~.yahoo. ~.yandex. server_names ~($host);
#   if ($invalid_referer) {
#       rewrite (.*) /golbis.jpg redirect;
        # drop the 'redirect' flag for redirect without URL change (internal rewrite)
#   }
}


# WebFonts
location ~* \.(eot|ttf|ttc|otf|woff|woff2|svg|swf|font.css)$ {
    access_log                  off;
    log_not_found               off;
    expires                     12M;
    tcp_nodelay                 off;
    open_file_cache             max=100 inactive=900s; # 1 mb from directio * 150 = 150 MB RAM
    open_file_cache_valid       90s;
    open_file_cache_min_uses    1;
    open_file_cache_errors      on; # specifies whether or not to cache errors when searching for a file (example 404 file not found errors).
    add_header                  Pragma public;
    add_header                  Cache-Control "public, max-age=31536000,no-transform";
    add_header                  Access-Control-Allow-Origin *; # If you are using cross-domain uncomment the following directive
}

# Disable it, if html or xml pages are generated by a script and you get 404 error
#location ~* ^.+\.(?:html|xml|htm)$
#    {
#    access_log                  off;
#    log_not_found               off;
#    expires                     12M;
#    directio                    1m; # files more than 10mb will read directly from drive avoid OS cache
#    tcp_nodelay                 off; # No need to bleed constant updates. Send the all shebang in one fell swoop.
#    limit_rate                  512K; # Limit download speed to 256Kb/s
#    limit_rate_after            10m; # Limit after 1m was downloaded.
    ## Set the OS file cache.
#    open_file_cache             max=150 inactive=600s; # 1 mb from directio * 150 = 150 MB RAM
#    open_file_cache_valid       90s;
#    open_file_cache_min_uses    2;
#    open_file_cache_errors      on; # specifies whether or not to cache errors when searching for a file (example 404 file not found errors).
#    add_header                  Pragma public;
#    add_header                  Cache-Control "public, max-age=31536000,no-transform";
#    }

location ~* ^.+\.(?:mp3|mp4|ogg|flv|mov)$
    {
    access_log                  off;
    log_not_found               off;
    expires                     12M;
    directio                    32m; # files more than 10mb will read directly from drive avoid OS cache
    tcp_nodelay                 off; # No need to bleed constant updates. Send the all shebang in one fell swoop.
    limit_rate                  2048K; # Limit download speed to 256Kb/s
    limit_rate_after            20m; # Limit after 1m was downloaded.
    ## Set the OS file cache.
    open_file_cache             max=500 inactive=3000s; # 32 mb from directio * 8 = 256 MB RAM
    open_file_cache_valid       60s;
    open_file_cache_min_uses    1;
    open_file_cache_errors      on;
    add_header                  Pragma public;
    add_header                  Cache-Control "public, max-age=31536000,no-transform";
    }

location ~ \.mp4$ {
    mp4;
    mp4_buffer_size       1m;
    mp4_max_buffer_size   5m;
    #mp4_limit_rate        on;
    #mp4_limit_rate_after  30s;
}

location ~ \.flv$ {
    flv;
}
