client_body_timeout 10;
client_header_timeout 10;
# 2018-01-02
# «`fastcgi_buffer_size` is a special buffer space used to hold the first part of the FastCGI response,
# which is going to be the HTTP response headers.
#
# You shouldn't need to adjust this from the default -
# even if Nginx defaults to the smallest page size of 4KB (your platform will determine if 4/8k buffer)
# it should fit your typical HTTP header.
#
# The one exception I have seen are frameworks that push large amounts of cookie data
# via the Set-Cookie HTTP header during their user verification/login phase -
# blowing out the buffer and resulting in a HTTP 500 error.
# In those instances you will need to increase this buffer to 8k/16k/32k
# to fully accommodate your largest upstream HTTP header being pushed.»
#
# https://gist.github.com/magnetikonline/11312172/fd82ba9eac8a794a86c21ab5fd47069f5de34e0b#introduction
fastcgi_buffer_size 32k;
# 2017-05-03
# This value is recommended by the official sample Nginx config for Magento 2:
# https://github.com/magento/magento2/blob/2.1.6/nginx.conf.sample#L161
#
# 2018-01-02
# 1) Magento 2 recommends it for PHP files only:
# https://github.com/magento/magento2/blob/2.2.2/nginx.conf.sample#L168
# 2) It is for a SINGLE CONNECTION:
# «Sets the number and size of the buffers used for reading a response from the proxied server,
# for a single connection.»
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers
# 3) I have changed it: «1024 4k» => «128 32k»
fastcgi_buffers 128 32k;
fastcgi_busy_buffers_size 256k;
fastcgi_connect_timeout 3600;
fastcgi_max_temp_file_size 1024m;
# 2020-12-20
# «Defines a timeout for reading a response from the FastCGI server.
# The timeout is set only between two successive read operations, not for the transmission of the whole response.
# If the FastCGI server does not transmit anything within this time, the connection is closed.»
fastcgi_read_timeout 3600;
# 2020-12-20
# «Sets a timeout for transmitting a request to the FastCGI server.
# The timeout is set only between two successive write operations, not for the transmission of the whole request.
# If the FastCGI server does not receive anything within this time, the connection is closed.»
# http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_send_timeout
fastcgi_send_timeout 3600;
fastcgi_temp_file_write_size 512k;
keepalive_timeout 30;
# 2017-05-21
# It fixes the warning for OroCRM: «[warn] could not build optimal proxy_headers_hash,
# you should increase either proxy_headers_hash_max_size: 512
# or proxy_headers_hash_bucket_size: 64».
proxy_headers_hash_bucket_size 256;
proxy_read_timeout 3600;
send_timeout 3600;