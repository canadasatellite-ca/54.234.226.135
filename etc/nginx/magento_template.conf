map $uri $phpset {
	default		"memory_limit=768M \n max_execution_time=1800 \n max_input_time=120 \n default_socket_timeout=120";
	~24AdminPanel	"memory_limit=2048M \n max_execution_time=900 \n max_input_time=900 \n default_socket_timeout=900";
	~\/wp-admin\/.*	"memory_limit=2048M \n max_execution_time=900 \n max_input_time=900 \n default_socket_timeout=900 \n max_input_vars = 25000";
}

map $uri $fcgitimeouts {
	default "120";
	~echo "900";
	~kdachterzijde "900";
}

map $uri $php_backendpass {
	default		127.0.0.1:9000;
	~\/wp-admin\/.*	127.0.0.1:9007;
}

map $http_cookie $testheader {
    default				wp-front;
    wordpress_logged_in_		wp-admin-back;
}


# by http_cookie
map $http_cookie $limitconnip {
	default			$binary_remote_addr;
	wordpress_logged_in	"";
}

map $http_cookie $limitreq {
	default			$binary_remote_addr;
	wordpress_logged_in	"";
}

# by URL
map $uri $limitconnip {
	default		$binary_remote_addr;
	~\/wp-admin\/.*	"";
}

map $uri $limitreq {
	default		$binary_remote_addr;
	~\/wp-admin\/.*	"";
}

map $uri $limitreqnodelay {
	default		30;
	~\/wp-admin\/.*	150;
}

limit_req_zone	$limitreq zone=wpreqPerSec20:1m rate=20r/s;
limit_conn_zone	$limitconnip zone=wpconPerIp:5m;

# in PHP location
#		limit_req		zone=wpreqPerSec20 ;
#		limit_conn		wpconPerIp 20;




# reuseport works in 1.9.1 version only
server {
	listen		80; #default_server; #reuseport;
#	listen		[::]:80; #default ipv6only=on;
	server_name	@@HOSTNAME@@ www.@@HOSTNAME@@;

	set		$root_path @@PATH@@;
	root		$root_path;

	access_log	/var/log/nginx/@@HOSTNAME@@-access.log combined buffer=32k;
	error_log	/var/log/nginx/@@HOSTNAME@@-error.log error;
	index		index.php index.htm index.html;
	include		nginx-bp/letsencrypt-acme-challenge.conf;
	include		nginx-bp/methods.conf;
	include		nginx-bp/favicon.conf;
#	include		nginx-bp/phpmyadmin.conf;
	include		nginx-bp/static.conf;
	include		nginx-bp/nocache.conf;
	include		nginx-bp/forbidrules.conf;
#	include		nginx-bp/pagespeed-per-site.conf;

	port_in_redirect off;

#	if ($bad_client) { return 403; }

	include		magento-bp/admin_setup_update_api_location.conf; # Pass to 88 port to avoid Varnish Cache

	location /
	{
	    #try_files $uri $uri/ /index.php?$query_string;
	    try_files $uri $uri/ @handler;
#		expires 1s;
	}

	location ^~ /app/			{ return 403; }
	location ^~ /includes/			{ return 403; }
	location ^~ /media/downloadable/	{ return 403; }
	location ^~ /pkginfo/			{ return 403; }
	location ^~ /report/config.xml		{ return 403; }
	location ^~ /var/			{ return 403; }
	location ^~ /scripts/			{ return 403; }
	location ^~ /lib/			{ return 403; }
	location ^~ /dev/			{ return 403; }
	location ^~ /RELEASE_NOTES.txt		{ return 403; }
	location ^~ /downloader/pearlib		{ return 403; }
	location ^~ /downloader/template	{ return 403; }
	location ^~ /downloader/Maged		{ return 403; }
	location ~* ^/errors/.+\.xml		{ return 403; }

	#location ^~ /admin/				{ return 403; }
	#location ~* /index.phprss/catalog/notifystock/	{ return 403; }
        #location ^~ /index.php/rss/catalog/notifystock	{ return 403; }
	#location ~* /rss/catalog/notifystock		{ return 403; }
	#location ~* /rss/catalog/review		{ return 403; }
	#location ~* /rss/catalog			{ return 403; }

	location ~ /\.(svn|git|hg|htpasswd|bash|ssh|php_cs|config) { return 444; }
	location ~ /.*\.(sh|pl|swp|phar|log|ini|sql|conf|yml|zip|tar|.+gz)$ { return 444; }

	location /var/export/ { ## Allow admins only to view export folder
		auth_basic			"Restricted"; ## Message shown in login window
		auth_basic_user_file	/etc/nginx/.htpasswd; ## See /etc/nginx/.htpasswd;
		autoindex			on;
	}

# http://inchoo.net/magento/magento-v2-soap-demystified/
# https://www.letstango.com/api/rest/products?page=2&limit=20
	location /api 
	{
		rewrite ^/api/rest /api.php?type=rest last;
		#rewrite ^/api/v2_soap /api.php?type=v2_soap last;
		rewrite ^/api/v2_soap /api.php?type=v2_soap&wsdl=1 last;
		rewrite ^/api/soap /api.php?type=soap last;
		rewrite ^/api/xmlrpc /api.php?type=xmlrpc last;
	}

	# CVE-2015-3428 / AW_Blog vulnerability. Note the .+ at the start: We want to allow url's like
	# order=create_date, which would otherwise match.
	if ($arg_order ~* .+(select|create|insert|update|drop|delete|concat|alter|load)) {
		return 403;
	}

	# Don't skip .thumbs, this is a default directory where Magento places thumbnails
        # Nginx cannot "not" match something, instead the target is matched with an empty block
        # http://stackoverflow.com/a/16304073
        location ~ /\.thumbs {
        }

	set $fastcgi_root $document_root;

	if ($request_uri = /index.php) {
		rewrite ^ http://$host? permanent; #301 redirect
	}

	#rewrite ^([^.]*[^/])$ $1/ permanent; ## adding slash to the end in links without . in path 
	rewrite ^/(.*)/$ /$1 permanent; ## removing slash to the end in links without . in path 

        # SUPEE 6285
        # Only allow the new url case sensitive lowercase, deny case insensitive
        location ^~ /rss/order/new {
            echo_exec @handler;
        }

        location ^~ /rss/catalog/notifystock {
            echo_exec @handler;
        }

        location ^~ /rss/catalog/review {
            echo_exec @handler;
        }

        location ~* /rss/order/new {
            return 403;
        }

        location ~* /rss/catalog/notifystock {
            return 403;
        }

        location ~* /rss/catalog/review {
            return 403;
        }


	## Order IS important! this is required BEFORE the PHP regex
        ## Allow PHP scripts in skin and JS, but render static 404 pages when skin or js file is missing
        ## Magento has RewriteCond %{REQUEST_URI} !^/(media|skin|js)/ in default htaccess
        location ~ ^/(skin|js)/ {
            location ~ \.php$ {
                echo_exec @phpfpm;
            }
            try_files $uri $uri/ =404;
        }

	# Disallow PHP scripts in /media/
        # Also render static 404 pages for missing media
        location ~ ^/media/ {
            location ~ \.php$ {
                return 403;
            }
            try_files $uri $uri/ =404;
        }

        location @handler {
        	#rewrite / /index.php;
        	rewrite / /index.php?$args;
        }

	location @fastcgi_backend {
		# server_name is read-only, so we need a temp var

		#auth_basic "Restricted";
		#auth_basic_user_file $document_root/.htpasswd;

		#set $my_server_name $server_name;
		#if ($my_server_name = "") {
		#	set $my_server_name $http_host;
		#}

		if (!-e $request_filename)  { rewrite / /index.php last; } ## Catch 404s that try_files miss
		root			$fastcgi_root;
		fastcgi_index		index.php;
		fastcgi_pass		$fastcgi_pass;
		include			fastcgi_params; ## See /etc/nginx/fastcgi_params
		fastcgi_param		SERVER_NAME $my_server_name;

		fastcgi_param		PHP_VALUE "$phpset";

		fastcgi_force_ranges	on;
		
		#fastcgi_read_timeout	$fcgitimeouts;
		#fastcgi_connect_timeout	$fcgitimeouts;
		#fastcgi_read_timeout		900s;
		#fastcgi_connect_timeout		900s;
		#fastcgi_pass_request_body	on;

		fastcgi_param		NGINX_REQUEST_TIME $date_gmt;
		fastcgi_param		SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		fastcgi_param		MAGE_RUN_CODE default; ## Store code is defined in administration > Configuration > Manage Stores
		fastcgi_param		MAGE_RUN_TYPE store;
		#fastcgi_param		MAGE_RUN_CODE $MAGE_RUN_CODE;
		#fastcgi_param		MAGE_RUN_TYPE $MAGE_RUN_TYPE;
		fastcgi_param		SERVER_PORT 80; ## It should fix Internal Redirects when Varnish is on 80 port (login problem or redirect to base URL instead a page). 
		fastcgi_param		PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
		fastcgi_keep_conn	on;
		fastcgi_hide_header	"X-Powered-By";
		limit_req		zone=reqPerSec100  burst=500 nodelay;
		limit_conn		conPerIp 150;
		add_header		X-Configured-by "Console.Support";
		add_header		X-Time-Spent $request_time;
		add_header		X-Cache-status $upstream_cache_status;
		add_header		X-Frame-Options SAMEORIGIN;
		add_header		X-Content-Type-Options nosniff;
		add_header		X-XSS-Protection "1; mode=block";
		add_header		Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	}

	location @phpfpm {
		set $log_handler phpfpm;
		#set $fastcgi_pass unix:/var/run/php5-fpm.sock;
		set $fastcgi_pass 127.0.0.1:9000;
		echo_exec @fastcgi_backend;
	}

	location @hhvm {
		set $log_handler hhvm;
		set $fastcgi_pass unix:/var/run/hhvm/hhvm.sock;
		echo_exec @fastcgi_backend;
	}

	location ~* /magmi($|/) {
		return https://support.hypernode.com/knowledgebase/securing-access-to-magmi/;
	}

	location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
		rewrite ^(.*.php)/ $1 last;
	}

	# always execute our own handler for php-fpm, to prevent serving raw php code and to have
	# a default when user removes configuration from ~/nginx/
	location ~ \.php$ {
		echo_exec @phpfpm;
	}

	rewrite ^/minify/([0-9]+)(/.*.(js|css))$ /lib/minify/m.php?f=$2&d=$1 last;
	rewrite ^/skin/m/([0-9]+)(/.*.(js|css))$ /lib/minify/m.php?f=$2&d=$1 last;
	location /lib/minify/                   { allow all; }
}

server {
	listen		127.0.0.1:88;
	listen		[::1]:88; #default ipv6only=on;
	server_name	@@HOSTNAME@@ www.@@HOSTNAME@@;
	set		$root_path @@PATH@@;
	root		$root_path;
	access_log	/var/log/nginx/@@HOSTNAME@@-access.log combined buffer=32k;
	error_log	/var/log/nginx/@@HOSTNAME@@-error.log error;
	index		index.php index.htm index.html;
	include		nginx-bp/favicon.conf;
	include		nginx-bp/forbidrules.conf;

	location /
	{
	    try_files $uri $uri/ /index.php;
	}

	include		magento-bp/php_production_admin.conf;

	port_in_redirect off;
}
