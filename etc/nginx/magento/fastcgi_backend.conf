location / 
	{ try_files $uri $uri/ @handler; }

set $fastcgi_root $document_root;

if ($request_uri = /index.php) {
	rewrite ^ http://$host? permanent; #301 redirect
}

rewrite ^([^.]*[^/])$ $1/ permanent; ## adding slash to the end in links without . in path 

# SUPEE 6285
# Only allow the new url case sensitive lowercase, deny case insensitive
location ^~ /rss/order/new { echo_exec @handler; }
location ^~ /rss/catalog/notifystock { echo_exec @handler; }
location ^~ /rss/catalog/review { echo_exec @handler; }
location ~* /rss/order/new { return 403; }
location ~* /rss/catalog/notifystock { return 403; }
location ~* /rss/catalog/review { return 403; }

## Order IS important! this is required BEFORE the PHP regex
## Allow PHP scripts in skin and JS, but render static 404 pages when skin or js file is missing
## Magento has RewriteCond %{REQUEST_URI} !^/(media|skin|js)/ in default htaccess
location ~ ^/(skin|js)/ {
	location ~ \.php$ { echo_exec @phpfpm; }
	try_files $uri $uri/ =404;
}

# Disallow PHP scripts in /media/
# Also render static 404 pages for missing media
location ~ ^/media/ {
	location ~ \.php$ { return 403; }
	try_files $uri $uri/ =404;
}

location @handler {
	rewrite / /index.php;
}

location @fastcgi_backend {
	# server_name is read-only, so we need a temp var
	set $my_server_name $server_name;
	if ($my_server_name = "") { set $my_server_name $http_host; }
	if (!-e $request_filename) { rewrite / /index.php last; } ## Catch 404s that try_files miss
	root			$fastcgi_root;
	fastcgi_index		index.php;
	fastcgi_pass		$fastcgi_pass;
	include			fastcgi_params; ## See /etc/nginx/fastcgi_params
	fastcgi_param		SERVER_NAME $my_server_name;
	fastcgi_param		NGINX_REQUEST_TIME $date_gmt;
	fastcgi_param		SCRIPT_FILENAME  $document_root$fastcgi_script_name;
	fastcgi_param		MAGE_RUN_CODE default; ## Store code is defined in administration > Configuration > Manage Stores
	fastcgi_param		MAGE_RUN_TYPE store;
	fastcgi_param		SERVER_PORT 80; ## It should fix Internal Redirects when Varnish is on 80 port (login problem or redirect to base URL instead a page). 
	fastcgi_keep_conn	on;
	fastcgi_hide_header	"X-Powered-By";
	limit_req		zone=reqPerSec100  burst=500 nodelay;
	limit_conn		conPerIp 150;
	add_header		X-Configured-by "Console.Support";
	add_header		X-Time-Spent $request_time;
	add_header		X-Cache-status $upstream_cache_status;
	add_header		X-Frame-Options SAMEORIGIN;
	add_header		X-Content-Type-Options nosniff;
	add_header		X-XSS-Protection "1; mode=block";
}

location @phpfpm {
	set $log_handler	phpfpm;
	set $fastcgi_pass	127.0.0.1:9000;
	echo_exec		@fastcgi_backend;
}

location @hhvm {
	set $log_handler	hhvm;
	set $fastcgi_pass	unix:/var/run/hhvm/hhvm.sock;
	echo_exec		@fastcgi_backend;
	}

location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
	rewrite ^(.*.php)/ $1 last;
}

# always execute our own handler for php-fpm, to prevent serving raw php code and to have
# a default when user removes configuration from ~/nginx/
location ~ \.php$ {
	echo_exec @phpfpm;
}
